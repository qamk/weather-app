(()=>{"use strict";var e={169:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([e.id,"html,body,h1,h2,h3,h4,h5,h6,p,span,blockquote,label,ul,li,dl,dt,form,fieldset,strong,b,em,i,figcaption,figure,article,nav,main,div,span,section,audio,video,a,button,input{padding:0;margin:0;border:0;outline:none;font-size:100%}body{line-height:1}ul li{list-style:none}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;font-size:18px;font-family:Georgia,Helvetica,serif}.m-1{margin:2.5px}.m-2{margin:6px}.m-3{margin:9.5px}.m-4{margin:13px}.m-5{margin:16.5px}.title-1{font-family:Georgia,Helvetica,serif;padding:13px;font-size:1.95rem;width:100%}.title-1.weight-normal{font-weight:normal}.title-2{font-family:Georgia,Helvetica,serif;padding:13px;font-size:1.7rem;width:100%}.title-2.weight-normal{font-weight:normal}.title-3{font-family:Georgia,Helvetica,serif;padding:13px;font-size:1.45rem;width:100%}.title-3.weight-normal{font-weight:normal}.title-4{font-family:Georgia,Helvetica,serif;padding:13px;font-size:1.2rem;width:100%}.title-4.weight-normal{font-weight:normal}.title-5{font-family:Georgia,Helvetica,serif;padding:13px;font-size:.95rem;width:100%}.title-5.weight-normal{font-weight:normal}.title-6{font-family:Georgia,Helvetica,serif;padding:13px;font-size:.7rem;width:100%}.title-6.weight-normal{font-weight:normal}.title-1{letter-spacing:10px}.cols{width:980px}.col-1-over-1{width:100%;margin-right:20px;float:left}.col-1-over-2{width:52.0408163265%;margin-right:20px;float:left}.col-1-over-3{width:37.4149659864%;margin-right:20px;float:left}.col-1-over-4{width:31.1224489796%;margin-right:20px;float:left}.col-1-over-5{width:28.1632653061%;margin-right:20px;float:left}.flex{display:flex;max-width:980px;height:100%}.flex.just-center{justify-content:center}.flex.just-start{justify-content:flex-start}.flex.just-around{justify-content:space-around}.flex.just-between{justify-content:space-between}.flex.align-center{align-items:center}.flex.align-end{align-items:flex-end}.flex.self-center{margin:0 auto}.brand{width:400px;padding:10px}@media screen and (max-width: 550px){.brand{width:100%}}.brand:hover{border:2px solid #dd8839}.subtitle{font-size:1.2rem;display:block;color:#224;text-transform:capitalize}.section{height:300px;padding:2em 1em}.section.height-med-len{height:480px}.container-bg-primary{background-color:#3d8f7a;border:1px solid #be5e5b}.container-bg{background-color:rgba(114,172,187,.4);border:8px solid #be5e5b}.container-medium{width:500px;height:auto;padding:14px}@media screen and (max-width: 545px){.container-medium{max-width:500px;width:auto}}.container-wide{width:800px;height:auto;padding:18px}.container-narrow{width:350px;height:auto;padding:10px}.input{padding:10px}.button{padding:10px 10px;border:none}.button:active,.button:focus{border:2px groove #dd8839;box-shadow:2px 1px 3px #dd8839}.link{cursor:pointer}.link:hover{color:#be5e5b}.link.primary:hover{color:#4078cc}.link.warning:hover{color:#c9be28}.link.success:hover{color:#46bd34}.list{height:auto}.list li{font-size:1.2rem;font-weight:500;padding:10px;font-family:Verdana,Tahoma,sans-serif}","",{version:3,sources:["webpack://./src/reset.scss","webpack://./src/styles.scss"],names:[],mappings:"AAEA,2KAIE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CAGF,KACE,aAAA,CAGF,MACE,eAAA,CCmBF,EAEE,6BAAA,CACG,0BAAA,CACK,qBAAA,CACR,cAAA,CACA,mCA/BmB,CA6DnB,KAEE,YADe,CADjB,KAEE,UADe,CADjB,KAEE,YADe,CADjB,KAEE,WADe,CADjB,KAEE,aADe,CAOjB,SACE,mCAtEiB,CAwEjB,YAAA,CACA,iBAFa,CAGb,UAAA,CACA,uBACE,kBAAA,CAPJ,SACE,mCAtEiB,CAwEjB,YAAA,CACA,gBAFa,CAGb,UAAA,CACA,uBACE,kBAAA,CAPJ,SACE,mCAtEiB,CAwEjB,YAAA,CACA,iBAFa,CAGb,UAAA,CACA,uBACE,kBAAA,CAPJ,SACE,mCAtEiB,CAwEjB,YAAA,CACA,gBAFa,CAGb,UAAA,CACA,uBACE,kBAAA,CAPJ,SACE,mCAtEiB,CAwEjB,YAAA,CACA,gBAFa,CAGb,UAAA,CACA,uBACE,kBAAA,CAPJ,SACE,mCAtEiB,CAwEjB,YAAA,CACA,eAFa,CAGb,UAAA,CACA,uBACE,kBAAA,CAKN,SACE,mBAAA,CAIF,MACE,WAnFgB,CAuFhB,cAKI,UAAA,CAEF,iBA7Fa,CA8Fb,UAAA,CARF,cAKI,oBAAA,CAEF,iBA7Fa,CA8Fb,UAAA,CARF,cAKI,oBAAA,CAEF,iBA7Fa,CA8Fb,UAAA,CARF,cAKI,oBAAA,CAEF,iBA7Fa,CA8Fb,UAAA,CARF,cAKI,oBAAA,CAEF,iBA7Fa,CA8Fb,UAAA,CAeJ,MACE,YAAA,CACA,eAhHgB,CAiHhB,WAAA,CAEA,kBACE,sBAAA,CAGF,iBACE,0BAAA,CAGF,kBACE,4BAAA,CAGF,mBACE,6BAAA,CAGF,mBACE,kBAAA,CAGF,gBACE,oBAAA,CAGF,kBACE,aAAA,CAKJ,OACE,WAAA,CAIA,YAhJW,CA6IX,qCAFF,OAGI,UAAA,CAAA,CAGF,aArHE,wBAAA,CA0HJ,UACE,gBAAA,CACA,aAAA,CACA,UAAA,CACA,yBAAA,CAGF,SACE,YAAA,CACA,eAAA,CACA,wBACE,YAAA,CAIJ,sBAzHE,wBA7DuB,CA6CrB,wBAAA,CA6IJ,cA7HE,qCA/DqB,CA+CnB,wBAAA,CAiJJ,kBACE,WAAA,CAKA,WAAA,CACA,YAAA,CALA,qCAFF,kBAGI,eAAA,CACA,UAAA,CAAA,CAMJ,gBACE,WAAA,CACA,WAAA,CACA,YAAA,CAGF,kBACE,WAAA,CACA,WAAA,CACA,YAhMW,CAmMb,OACE,YApMW,CAuMb,QAtKE,iBAAA,CACA,WAAA,CAEA,6BACE,yBAAA,CACA,8BAAA,CAqKJ,MACE,cAAA,CACA,YACE,aAhOkB,CAkOpB,oBACE,aAjOa,CAmOf,oBACE,aAnOa,CAqOf,oBACE,aArOa,CAyOjB,MAOE,WAAA,CANA,SACE,gBAAA,CACA,eAAA,CACA,YA/NS,CAgOT,qCAzOmB",sourcesContent:["// Reset default browser styles\n\nhtml, body, h1, h2, h3, h4, h5, h6, p, span, blockquote,\nlabel, ul, li, dl, dt, form, fieldset, strong, b, em, i,\nfigcaption, figure, article, nav, main, div, span, section,\naudio, video, a, button, input {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  outline: none;\n  font-size: 100%;\n}\n\nbody {\n  line-height: 1;\n}\n\nul li {\n  list-style: none;\n}","@use 'sass:math';\n\n// Theme Colours\n$theme-colour-primary: rgba(114, 172, 187, .4);\n$theme-colour-accent: rgb(190, 94, 91);\n$theme-colour-secondary: #3d8f7a;\n$primary-colour: #4078cc;\n$warning-colour: #c9be28;\n$success-colour: #46bd34;\n$focus-colour: #dd8839;\n\n// Typography\n$font-stack-primary: Georgia, Helvetica, serif;\n$font-stack-secondary: Verdana, Tahoma, sans-serif;\n\n// Fluid-grid\n$container-width: 980px;\n$column-gutters: 20px;\n$row-gutters: 10px;\n\n// Basic padding\n$pad-main-x: 10px;\n$pad-main-y: 10px;\n\n// Borders\n$border-width: 2px;\n$border-radius: 4px;\n$border-style-primary: solid;\n$border-style-focus: dashed;\n$border-style-disabled: groove;\n\n// Box shadow\n$box-shadow-x: 2px;\n$box-shadow-y: 1px;\n$box-shadow-blur: 3px;\n$box-shadow-colour: #9c4444;\n\n* {\n  // If you use #{vendor}-#{property} a lot I recommend using a mixin and passing in the property\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n  font-size: 18px;\n  font-family: $font-stack-primary;\n}\n\n@mixin basic-border($width-modifier: 0px, $border-colour: $theme-colour-accent) {\n  @if $border-colour == none {\n    border: none;\n  } @else {\n    border: ($border-width + $width-modifier) $border-style-primary $border-colour;\n  }\n}\n\n@mixin button($pad-x: $pad-main-x, $pad-y: $pad-main-y) {\n  padding: $pad-y $pad-x;\n  border: none;\n  \n  &:active, &:focus {\n    border: $border-width $border-style-disabled $focus-colour;\n    box-shadow: $box-shadow-x $box-shadow-y $box-shadow-blur $focus-colour;\n  }\n\n}\n\n@mixin block-theme($bg-colour: $theme-colour-secondary, $border-colour: $theme-colour-accent, $border-modifier: 3px) {\n  background-color: $bg-colour;\n  $border-width: 3px + $border-modifier;\n  @include basic-border($width-modifier: $border-width);\n}\n\n// Margins\n@for $i from 1 to 6 {\n  .m-#{$i} {\n    $margin-shift: (2.5px * $i) + ($i - 1);\n    margin: $margin-shift;\n  }\n}\n\n// Titles (h1-h6)\n@for $i from 1 to 7 {\n  .title-#{$i} {\n    font-family: $font-stack-primary;\n    $title-size: 2.2rem - (.25rem * $i);\n    padding: $pad-main-y + 3px;\n    font-size: $title-size;\n    width: 100%;\n    &.weight-normal {\n      font-weight: normal;\n    }\n  }\n}\n\n.title-1 {\n  letter-spacing: 10px;\n}\n\n// Columns\n.cols {\n  width: $container-width;\n}\n\n@for $span from 1 to 6 {\n  .col-1-over-#{$span} {\n    $absolute-width: math.div($container-width, $span) + ($column-gutters * ($span - 1));\n    @if $span == 6 {\n      width: $absolute_width;\n    } @else {\n      width: math.div($absolute_width, $container-width) * 100%;\n    }\n    margin-right: $column-gutters;\n    float: left;\n  }\n}\n\n@mixin clearfix {\n  &::after,\n  &::before {\n    content: \"\";\n    display: table;\n  }\n  &::after {\n    clear: both;\n  }\n}\n\n.flex {\n  display: flex;\n  max-width: $container-width;\n  height: 100%;\n\n  &.just-center {\n    justify-content: center;\n  }\n\n  &.just-start {\n    justify-content: flex-start;\n  }\n\n  &.just-around {\n    justify-content: space-around;\n  }\n\n  &.just-between {\n    justify-content: space-between;\n  }\n\n  &.align-center {\n    align-items: center;\n  }\n\n  &.align-end {\n    align-items: flex-end;\n  }\n\n  &.self-center {\n    margin: 0 auto;\n  }\n\n}\n\n.brand {\n  width: 400px;\n  @media screen and (max-width: 550px) {\n    width: 100%;\n  }\n  padding: $pad-main-y;\n  &:hover {\n    @include basic-border($border-colour: $focus-colour);\n  }\n}\n\n.subtitle {\n  font-size: 1.2rem;\n  display: block;\n  color: #224;\n  text-transform: capitalize;\n}\n\n.section {\n  height: 300px;\n  padding: 2em 1em;\n  &.height-med-len {\n    height: 480px;\n  }\n}\n\n.container-bg-primary {\n  @include block-theme($border-modifier: -4px);\n}\n\n.container-bg {\n  @include block-theme($bg-colour: $theme-colour-primary);\n}\n\n.container-medium {\n  width: 500px;\n  @media screen and (max-width: 545px) {\n    max-width: 500px;\n    width: auto;\n  }\n  height: auto;\n  padding: $pad-main-y + 4px;\n}\n\n.container-wide {\n  width: 800px;\n  height: auto;\n  padding: $pad-main-y + 8px;\n}\n\n.container-narrow {\n  width: 350px;\n  height: auto;\n  padding: $pad-main-y;\n}\n\n.input {\n  padding: $pad-main-y;\n}\n\n.button {\n  @include button();\n}\n\n.link {\n  cursor: pointer;\n  &:hover {\n    color: $theme-colour-accent;\n  }\n  &.primary:hover {\n    color: $primary-colour;\n  }\n  &.warning:hover {\n    color: $warning-colour;\n  }\n  &.success:hover {\n    color: $success-colour;\n  }\n}\n\n.list {\n  li {\n    font-size: 1.2rem;\n    font-weight: 500;\n    padding: $pad-main-y;\n    font-family: $font-stack-secondary;\n  }\n  height: auto;\n}\n"],sourceRoot:""}]);const A=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),n.push(c))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],A=0;A<e.length;A++){var s=e[A],l=o.base?s[0]+o.base:s[0],c=i[l]||0,d="".concat(l," ").concat(c);i[l]=c+1;var u=t(d),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var p=r(m,o);o.byIndex=A,n.splice(A,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var A=t(i[a]);n[A].references--}for(var s=o(e,r),l=0;l<i.length;l++){var c=t(i[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{const e=(()=>{const e=(e,n)=>{for(let t of n)e.classList.add(t)},n=(e,n)=>{for(let[t,o]of Object.entries(n))try{e[t]=o}catch(e){console.log(e)}};return{ulGenerator:({root:t,childCount:o,classes:r=[],attributes:i=[]}={})=>{let a=document.createElement("ul");e(a,r),n(a,i);for(let e=0;e<o;e++){let n=document.createElement("li");n.setAttribute("data-id",e),a.appendChild(n)}return t.appendChild(a),a},elementGenerator:({root:t,elementName:o,classes:r=[],attributes:i={}}={})=>{if(!o)return;let a=document.createElement(o);var A;return 0===r.length||e(a,r),A=i,0===Object.keys(A)||n(a,i),t.appendChild(a),a}}})(),n=()=>{let e,n="appid=97aa6c26c2af40cfea026c9e196de08b";return{fetchHandler:async(...t)=>{const o="q="+t.join(",");try{const t=await(async([e,t])=>{let o=[e,t,n].join("&");return(await fetch("https://api.openweathermap.org/data/2.5/weather?"+o,{mode:"cors"})).json()})([o,"units=metric"]);if("404"==t.cod)throw"Invalid query";e=t}catch(e){return console.log(data),new Error(e)}return(()=>{const n=e.weather[0],t=e.main,o=e.wind;return{weather:{description:n.description},temperature:{main:t.temp,feels:t.feels_like,max:t.temp_max,min:t.temp_min},wind:{speed:o.speed}}})()}}},o={toCelsius:e=>{let n=[];for(let t of e)t[1]=Math.round((t[1]-32)*(5/9)),n.push(t);return n},toFahrenheit:e=>{let n=[];for(let t of e)t[1]=Math.round(1.8*+t[1]+32),n.push(t);return n},units:e=>({f:"&deg F",c:"&deg C",wind:"k/h"}[e])};var r=t(379),i=t.n(r),a=t(795),A=t.n(a),s=t(569),l=t.n(s),c=t(565),d=t.n(c),u=t(216),m=t.n(u),p=t(589),h=t.n(p),f=t(169),C={};C.styleTagTransform=h(),C.setAttributes=d(),C.insert=l().bind(null,"head"),C.domAPI=A(),C.insertStyleElement=m(),i()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;const g=(()=>{const t=document.getElementById("content"),r=((e,n)=>{let t;return{drawPage:()=>{0===n.childElementCount||n.removeChild(n.lastElementChild);const o=e.elementGenerator({root:n,elementName:"section",classes:["section","container-bg-primary"]}),r=e.elementGenerator({root:o,elementName:"article",classes:["flex","just-center","align-end","self-center"]}),i=(e.elementGenerator({root:r,elementName:"input",classes:["input"],attributes:{placeholder:"e.g. london, uk",required:!0}}),e.elementGenerator({root:r,elementName:"button",classes:["button"],attributes:{textContent:"Submit Query",type:"submit"}}));t=[i]},getInteractive:()=>t||[]}})(e,t),i=((e,n)=>{let t;return{drawPage:()=>{0===n.childElementCount||n.removeChild(n.lastElementChild);const o=e.elementGenerator({root:n,elementName:"section",classes:["section","height-med-len"]}),r=e.elementGenerator({root:o,elementName:"div",classes:["container-medium"]}),i=(e.elementGenerator({root:r,elementName:"h2",classes:["title-2","weight-normal"],attributes:{innerHTML:"Weather search results:"}}),e.elementGenerator({root:r,elementName:"p",classes:["subtitle"],attributes:{id:"weather"}}),e.elementGenerator({root:o,elementName:"div",classes:[]})),a=e.elementGenerator({root:i,elementName:"div",classes:["container-bg"]}),A=e.elementGenerator({root:a,elementName:"div",classes:["container-narrow"]}),s=e.elementGenerator({root:A,elementName:"button",classes:["button","m-5"],attributes:{textContent:"Fahrenheit",id:"f"}}),l=e.elementGenerator({root:A,elementName:"button",classes:["button"],attributes:{textContent:"Celsius",id:"c",disabled:!0}}),c=e.elementGenerator({root:a,elementName:"div",classes:["cols","container-medium"]});e.ulGenerator({root:c,childCount:4,classes:["col-3","list"],attributes:{id:"data_list"}}),t=[s,l]},getInteractive:()=>t||[]}})(e,t),a=n(),A=o;let s,l,c,d;const u=(e,n)=>{e.addEventListener("click",n)},m=e=>{const n={main:"Temperature",min:"Minimum Temperature",max:"Maximum Temperature",feels:"Feels Like",description:"Today we have",speed:"Wind speed"};let t=[];for(let[o,r]of Object.entries(e)){const e=n[o];t.push([e,r])}return t},p=(e,n="c")=>{const t=document.getElementById("data_list").childNodes;l=e||l,((e,n,t)=>{for(let o of e){const e=n[+o.dataset.id].join(": "),r=A.units(t);o.innerHTML=e+r}l=n})(t,l,n)},h=e=>{const n={c:A.toCelsius,f:A.toFahrenheit},t=e.target.id,o=n[t](l);p(o,t),(e=>{const n="f"===e?"c":"f",t=document.getElementById(n),o=document.getElementById(e);t.removeAttribute("disabled"),o.disabled=!0})(t)},f=async()=>{let e=document.querySelector("input").value;try{if(s=await a.fetchHandler(e),s.message)throw s}catch(e){return console.log(e)}C(i),(()=>{let e=s.temperature,n=s.weather,t=s.wind;c=m(n)[0],d=m(t)[0],l=m((e=>{for(let[n,t]of Object.entries(e)){const o=Math.round(t);e[n]=o}return e})(e))})(),(()=>{const e=document.getElementById("weather");console.log("descr before",c);const n=c.join(" ~ ");console.log("descr after",n),e.innerHTML=n})(),p()},C=(e=r)=>{let n=e===r?f:h;(e=>{e.drawPage(t)})(e),((e,n)=>{const t=e.getInteractive();for(let e of t)u(e,n)})(e,n)};return{run:C,setTitleButton:()=>{document.querySelector("h1").addEventListener("click",(function(){C(r)}))}}})();g.setTitleButton(),g.run()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,