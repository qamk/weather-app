@use 'sass:math';

// Theme Colours
$theme-colour-primary: rgba(114, 172, 187, .4);
$theme-colour-accent: rgb(190, 94, 91);
$theme-colour-secondary: #3d8f7a;
$primary-colour: #4078cc;
$warning-colour: #c9be28;
$success-colour: #46bd34;
$focus-colour: #dd8839;

// Typography
$font-stack-primary: Georgia, Helvetica, serif;
$font-stack-secondary: Verdana, Tahoma, sans-serif;

// Fluid-grid
$container-width: 980px;
$column-gutters: 20px;
$row-gutters: 10px;

// Basic padding
$pad-main-x: 10px;
$pad-main-y: 10px;

// Borders
$border-width: 2px;
$border-radius: 4px;
$border-style-primary: solid;
$border-style-focus: dashed;
$border-style-disabled: groove;

// Box shadow
$box-shadow-x: 2px;
$box-shadow-y: 1px;
$box-shadow-blur: 3px;
$box-shadow-colour: #9c4444;

* {
  // If you use #{vendor}-#{property} a lot I recommend using a mixin and passing in the property
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 18px;
  font-family: $font-stack-primary;
}

@mixin basic-border($width-modifier: 0px, $border-colour: $theme-colour-accent) {
  @if $border-colour == none {
    border: none;
  } @else {
    border: ($border-width + $width-modifier) $border-style-primary $border-colour;
  }
}

@mixin button($pad-x: $pad-main-x, $pad-y: $pad-main-y) {
  padding: $pad-y $pad-x;
  border: none;
  
  &:active, &:focus {
    border: $border-width $border-style-disabled $focus-colour;
    box-shadow: $box-shadow-x $box-shadow-y $box-shadow-blur $focus-colour;
  }

}

@mixin block-theme($bg-colour: $theme-colour-secondary, $border-colour: $theme-colour-accent, $border-modifier: 3px) {
  background-color: $bg-colour;
  $border-width: 3px + $border-modifier;
  @include basic-border($width-modifier: $border-width);
}

// Margins
@for $i from 1 to 6 {
  .m-#{$i} {
    $margin-shift: (2.5px * $i) + ($i - 1);
    margin: $margin-shift;
  }
}

// Titles (h1-h6)
@for $i from 1 to 7 {
  .title-#{$i} {
    font-family: $font-stack-primary;
    $title-size: 2.2rem - (.25rem * $i);
    padding: $pad-main-y + 3px;
    font-size: $title-size;
    width: 100%;
    &.weight-normal {
      font-weight: normal;
    }
  }
}

.title-1 {
  letter-spacing: 10px;
}

// Columns
.cols {
  width: $container-width;
}

@for $span from 1 to 6 {
  .col-1-over-#{$span} {
    $absolute-width: math.div($container-width, $span) + ($column-gutters * ($span - 1));
    @if $span == 6 {
      width: $absolute_width;
    } @else {
      width: math.div($absolute_width, $container-width) * 100%;
    }
    margin-right: $column-gutters;
    float: left;
  }
}

@mixin clearfix {
  &::after,
  &::before {
    content: "";
    display: table;
  }
  &::after {
    clear: both;
  }
}

.flex {
  display: flex;
  max-width: $container-width;
  height: 100%;

  &.just-center {
    justify-content: center;
  }

  &.just-start {
    justify-content: flex-start;
  }

  &.just-around {
    justify-content: space-around;
  }

  &.just-between {
    justify-content: space-between;
  }

  &.align-center {
    align-items: center;
  }

  &.align-end {
    align-items: flex-end;
  }

  &.self-center {
    margin: 0 auto;
  }

}

.brand {
  width: 400px;
  @media screen and (max-width: 550px) {
    width: 100%;
  }
  padding: $pad-main-y;
  &:hover {
    @include basic-border($border-colour: $focus-colour);
  }
}

.subtitle {
  font-size: 1.2rem;
  display: block;
  color: #224;
  text-transform: capitalize;
}

.section {
  height: 300px;
  padding: 2em 1em;
  &.height-med-len {
    height: 480px;
  }
}

.container-bg-primary {
  @include block-theme($border-modifier: -4px);
}

.container-bg {
  @include block-theme($bg-colour: $theme-colour-primary);
}

.container-medium {
  width: 500px;
  @media screen and (max-width: 545px) {
    max-width: 500px;
    width: auto;
  }
  height: auto;
  padding: $pad-main-y + 4px;
}

.container-wide {
  width: 800px;
  height: auto;
  padding: $pad-main-y + 8px;
}

.container-narrow {
  width: 350px;
  height: auto;
  padding: $pad-main-y;
}

.input {
  padding: $pad-main-y;
}

.button {
  @include button();
}

.link {
  cursor: pointer;
  &:hover {
    color: $theme-colour-accent;
  }
  &.primary:hover {
    color: $primary-colour;
  }
  &.warning:hover {
    color: $warning-colour;
  }
  &.success:hover {
    color: $success-colour;
  }
}

.list {
  li {
    font-size: 1.2rem;
    font-weight: 500;
    padding: $pad-main-y;
    font-family: $font-stack-secondary;
  }
  height: auto;
}
